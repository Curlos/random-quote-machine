{"version":3,"sources":["api/index.js","App.js","index.js"],"names":["fetchAllQuotes","a","axios","get","response","data","quotes","App","useState","isLoading","setLoading","setQuotes","quote","setQuote","author","setAuthor","randomIndex","Math","floor","random","length","twitterLink","useEffect","allQuotes","fetchQuotes","console","log","Card","id","style","width","Body","Title","Text","href","size","Button","variant","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAEaA,EAAc,uCAAG,4BAAAC,EAAA,4DACV,yIADU,kBAICC,IAAMC,IAHjB,0IADU,cAIhBC,EAJgB,yBAKfA,EAASC,KAAKC,QALC,wHAAH,qDCuDZC,G,YAlDH,WAAO,IAAD,EAEgBC,oBAAS,GAFzB,mBAETC,EAFS,KAEEC,EAFF,OAGYF,mBAAS,IAHrB,mBAGTF,EAHS,KAGDK,EAHC,OAIUH,mBAAS,uJAJnB,mBAITI,EAJS,KAIFC,EAJE,OAKYL,mBAAS,iBALrB,mBAKTM,EALS,KAKDC,EALC,KAMVC,EAAcC,KAAKC,MAAMD,KAAKE,SAAWb,EAAOc,QAChDC,EAAW,sFAAkFT,EAAlF,aAA4FE,GAa7G,GAVAQ,qBAAU,YACS,uCAAG,4BAAArB,EAAA,sEACMD,IADN,OACZuB,EADY,OAElBZ,EAAUY,GACVb,GAAW,GAHO,2CAAH,qDAMjBc,KACC,IAEAf,EACD,OAAO,6CAGTgB,QAAQC,IAAIpB,EAAOU,GAAaJ,MAAON,EAAOU,GAAaF,QAO3D,OACE,8BACE,cAACa,EAAA,EAAD,CAAMC,GAAG,YAAYC,MAAO,CAAEC,MAAO,SAArC,SACE,eAACH,EAAA,EAAKI,KAAN,WACE,cAACJ,EAAA,EAAKK,MAAN,yBACA,eAACL,EAAA,EAAKM,KAAN,WACE,qBAAKL,GAAG,OAAR,SAAgBhB,IAChB,qBAAKgB,GAAG,SAAR,SAAkBd,OAGpB,mBAAGc,GAAG,cAAcM,KAAMb,EAA1B,SAAuC,cAAC,IAAD,CAAiBc,KAAM,OAE9D,cAACC,EAAA,EAAD,CAAQR,GAAG,YAAYS,QAAQ,UAAUC,QAAU7B,EAA0B,KAjBjE,WAClBI,EAASP,EAAOU,GAAaJ,OAC7BG,EAAUT,EAAOU,GAAaF,SAexB,gCC9CVyB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f28746f9.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const fetchAllQuotes = async () => {\n    let quotesUrl = 'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json';\n\n    try {\n        const response = await axios.get(quotesUrl);\n        return response.data.quotes;\n    } catch(error) {\n        return error;\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { FaTwitterSquare } from 'react-icons/fa';\nimport { fetchAllQuotes } from './api'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nconst App = () => {\n\n  const [isLoading, setLoading] = useState(true);\n  const [quotes, setQuotes] = useState([]);\n  const [quote, setQuote] = useState('If you look at what you have in life, you’ll always have more. If you look at what you don’t have in life, you’ll never have enough.');\n  const [author, setAuthor] = useState('Oprah Winfrey');\n  const randomIndex = Math.floor(Math.random() * quotes.length);\n  const twitterLink = `https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=\"${quote}\" ${author}`\n\n\n  useEffect(() => {\n    const fetchQuotes = async () => {\n      const allQuotes = await fetchAllQuotes();\n      setQuotes(allQuotes);\n      setLoading(false);\n    }\n\n    fetchQuotes();\n  }, []);\n\n  if(isLoading) {\n    return <div>Loading...</div>\n  }\n\n  console.log(quotes[randomIndex].quote, quotes[randomIndex].author)\n\n  const handleClick = () => {\n    setQuote(quotes[randomIndex].quote);\n    setAuthor(quotes[randomIndex].author);\n  }\n\n  return (\n    <div>\n      <Card id=\"quote-box\" style={{ width: '18rem' }}>\n        <Card.Body>\n          <Card.Title>Card Title</Card.Title>\n          <Card.Text>\n            <div id=\"text\">{quote}</div>\n            <div id=\"author\">{author}</div>\n          </Card.Text>\n\n          <a id=\"tweet-quote\" href={twitterLink}><FaTwitterSquare size={42}/></a>\n         \n          <Button id=\"new-quote\" variant=\"primary\" onClick={!isLoading ? handleClick : null}>New quote</Button>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}